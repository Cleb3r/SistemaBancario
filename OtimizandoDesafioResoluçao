import textwrap

# Configurações do menu e variáveis globais
menu = """\n
=============== MENU ================
[d]\tDepositar
[s]\tSacar
[e]\tExtrato
[nc]\tNova conta
[lc]\tListar contas
[nu]\tNovo usuário
[q]\tSair
=> """

saldo = 0
limite = 500
extrato = ""
numero_saques = 0
LIMITE_SAQUES = 3
AGENCIA = "0001"

LARGURA_DESCRICAO = 20
LARGURA_VALOR = 15

usuarios = []
contas = []

def realizar_deposito(valor):
    global saldo, extrato
    if valor > 0:
        saldo += valor
        extrato += f"Depósito:{' ' * (LARGURA_DESCRICAO - len('Depósito'))}{f'R$ {valor:,.2f}'.rjust(LARGURA_VALOR)}\n"
        print("\n=== Depósito realizado com sucesso! ===")
    else:
        print("Operação falhou! O valor informado é inválido.")

def realizar_saque(valor):
    global saldo, extrato, numero_saques
    if valor <= 0:
        print("Operação falhou! O valor informado é inválido.")
    elif valor > saldo:
        print("Operação falhou! Você não tem saldo suficiente.")
    elif valor > limite:
        print("Operação falhou! O valor do saque excede o limite.")
    elif numero_saques >= LIMITE_SAQUES:
        print("Operação falhou! Número máximo de saques excedido.")
    else:
        saldo -= valor
        extrato += f"Saque:{' ' * (LARGURA_DESCRICAO - len('Saque'))}{f'R$ {valor:,.2f}'.rjust(LARGURA_VALOR)}\n"
        numero_saques += 1
        print("\n=== Saque realizado com sucesso! ===")

def exibir_extrato():
    print("\n============= EXTRATO ===============")
    if not extrato:
        print("Não foram realizadas movimentações.".rjust(LARGURA_DESCRICAO + LARGURA_VALOR + 10))
    else:
        print(extrato)
    print(f"Saldo:{' ' * (LARGURA_DESCRICAO - len('Saldo'))}{f'R$ {saldo:,.2f}'.rjust(LARGURA_VALOR)}")
    print("=======================================")

def criar_usuario():
    cpf = input("Informe o CPF (somente número): ")
    usuario = filtrar_usuario(cpf)

    if usuario:
        print("\n@@@ Já existe usuário com esse CPF! @@@")
        return

    nome = input("Informe o nome completo: ")
    data_nascimento = input("Informe a data de nascimento (dd-mm-aaaa): ")
    endereco = input("Informe o endereço (logradouro, nro - bairro - cidade/sigla estado): ")

    usuarios.append({"nome": nome, "data_nascimento": data_nascimento, "cpf": cpf, "endereco": endereco})

    print("=== Usuário criado com sucesso! ===")

def filtrar_usuario(cpf):
    usuarios_filtrados = [usuario for usuario in usuarios if usuario["cpf"] == cpf]
    return usuarios_filtrados[0] if usuarios_filtrados else None

def criar_conta():
    cpf = input("Informe o CPF do usuário: ")
    usuario = filtrar_usuario(cpf)

    if usuario:
        numero_conta = len(contas) + 1
        conta = {"agencia": AGENCIA, "numero_conta": numero_conta, "usuario": usuario}
        contas.append(conta)
        print("\n=== Conta criada com sucesso! ===")
    else:
        print("\n@@@ Usuário não encontrado, fluxo de criação de conta encerrado! @@@")

def listar_contas():
    for conta in contas:
        linha = f"""\
            Agência:\t{conta['agencia']}
            C/C:\t\t{conta['numero_conta']}
            Titular:\t{conta['usuario']['nome']}
        """
        print("=" * 100)
        print(textwrap.dedent(linha))

while True:
    opcao = input(menu)

    if opcao == "d":
        valor = float(input("Informe o valor do depósito: "))
        realizar_deposito(valor)
    elif opcao == "s":
        valor = float(input("Informe o valor do saque: "))
        realizar_saque(valor)
    elif opcao == "e":
        exibir_extrato()
    elif opcao == "nu":
        criar_usuario()
    elif opcao == "nc":
        criar_conta()
    elif opcao == "lc":
        listar_contas()
    elif opcao == "q":
        break
    else:
        print("Operação inválida, por favor selecione novamente a operação desejada.")
